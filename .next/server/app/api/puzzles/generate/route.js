/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "app/api/puzzles/generate/route";
exports.ids = ["app/api/puzzles/generate/route"];
exports.modules = {

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fapi%2Fpuzzles%2Fgenerate%2Froute&page=%2Fapi%2Fpuzzles%2Fgenerate%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fpuzzles%2Fgenerate%2Froute.ts&appDir=%2Fmedia%2Fchris%2FDATA%2Fsource%2Frepos%2Fcrosswise%2Fsrc%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2Fmedia%2Fchris%2FDATA%2Fsource%2Frepos%2Fcrosswise&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D&isGlobalNotFoundEnabled=!":

  !*** ./node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fapi%2Fpuzzles%2Fgenerate%2Froute&page=%2Fapi%2Fpuzzles%2Fgenerate%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fpuzzles%2Fgenerate%2Froute.ts&appDir=%2Fmedia%2Fchris%2FDATA%2Fsource%2Frepos%2Fcrosswise%2Fsrc%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2Fmedia%2Fchris%2FDATA%2Fsource%2Frepos%2Fcrosswise&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D&isGlobalNotFoundEnabled=! ***!

/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   handler: () => (/* binding */ handler),\n/* harmony export */   patchFetch: () => (/* binding */ patchFetch),\n/* harmony export */   routeModule: () => (/* binding */ routeModule),\n/* harmony export */   serverHooks: () => (/* binding */ serverHooks),\n/* harmony export */   workAsyncStorage: () => (/* binding */ workAsyncStorage),\n/* harmony export */   workUnitAsyncStorage: () => (/* binding */ workUnitAsyncStorage)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/route-modules/app-route/module.compiled */ \"(rsc)/./node_modules/next/dist/server/route-modules/app-route/module.compiled.js\");\n/* harmony import */ var next_dist_server_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/route-kind */ \"(rsc)/./node_modules/next/dist/server/route-kind.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/server/lib/patch-fetch */ \"(rsc)/./node_modules/next/dist/server/lib/patch-fetch.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! next/dist/server/request-meta */ \"(rsc)/./node_modules/next/dist/server/request-meta.js\");\n/* harmony import */ var next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var next_dist_server_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! next/dist/server/lib/trace/tracer */ \"(rsc)/./node_modules/next/dist/server/lib/trace/tracer.js\");\n/* harmony import */ var next_dist_server_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var next_dist_shared_lib_router_utils_app_paths__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! next/dist/shared/lib/router/utils/app-paths */ \"next/dist/shared/lib/router/utils/app-paths\");\n/* harmony import */ var next_dist_shared_lib_router_utils_app_paths__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(next_dist_shared_lib_router_utils_app_paths__WEBPACK_IMPORTED_MODULE_5__);\n/* harmony import */ var next_dist_server_base_http_node__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! next/dist/server/base-http/node */ \"(rsc)/./node_modules/next/dist/server/base-http/node.js\");\n/* harmony import */ var next_dist_server_base_http_node__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_base_http_node__WEBPACK_IMPORTED_MODULE_6__);\n/* harmony import */ var next_dist_server_web_spec_extension_adapters_next_request__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! next/dist/server/web/spec-extension/adapters/next-request */ \"(rsc)/./node_modules/next/dist/server/web/spec-extension/adapters/next-request.js\");\n/* harmony import */ var next_dist_server_web_spec_extension_adapters_next_request__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_web_spec_extension_adapters_next_request__WEBPACK_IMPORTED_MODULE_7__);\n/* harmony import */ var next_dist_server_lib_trace_constants__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! next/dist/server/lib/trace/constants */ \"(rsc)/./node_modules/next/dist/server/lib/trace/constants.js\");\n/* harmony import */ var next_dist_server_lib_trace_constants__WEBPACK_IMPORTED_MODULE_8___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_trace_constants__WEBPACK_IMPORTED_MODULE_8__);\n/* harmony import */ var next_dist_server_instrumentation_utils__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! next/dist/server/instrumentation/utils */ \"(rsc)/./node_modules/next/dist/server/instrumentation/utils.js\");\n/* harmony import */ var next_dist_server_send_response__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! next/dist/server/send-response */ \"(rsc)/./node_modules/next/dist/server/send-response.js\");\n/* harmony import */ var next_dist_server_web_utils__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! next/dist/server/web/utils */ \"(rsc)/./node_modules/next/dist/server/web/utils.js\");\n/* harmony import */ var next_dist_server_web_utils__WEBPACK_IMPORTED_MODULE_11___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_web_utils__WEBPACK_IMPORTED_MODULE_11__);\n/* harmony import */ var next_dist_server_lib_cache_control__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! next/dist/server/lib/cache-control */ \"(rsc)/./node_modules/next/dist/server/lib/cache-control.js\");\n/* harmony import */ var next_dist_lib_constants__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! next/dist/lib/constants */ \"(rsc)/./node_modules/next/dist/lib/constants.js\");\n/* harmony import */ var next_dist_lib_constants__WEBPACK_IMPORTED_MODULE_13___default = /*#__PURE__*/__webpack_require__.n(next_dist_lib_constants__WEBPACK_IMPORTED_MODULE_13__);\n/* harmony import */ var next_dist_shared_lib_no_fallback_error_external__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! next/dist/shared/lib/no-fallback-error.external */ \"next/dist/shared/lib/no-fallback-error.external\");\n/* harmony import */ var next_dist_shared_lib_no_fallback_error_external__WEBPACK_IMPORTED_MODULE_14___default = /*#__PURE__*/__webpack_require__.n(next_dist_shared_lib_no_fallback_error_external__WEBPACK_IMPORTED_MODULE_14__);\n/* harmony import */ var next_dist_server_response_cache__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! next/dist/server/response-cache */ \"(rsc)/./node_modules/next/dist/server/response-cache/index.js\");\n/* harmony import */ var next_dist_server_response_cache__WEBPACK_IMPORTED_MODULE_15___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_response_cache__WEBPACK_IMPORTED_MODULE_15__);\n/* harmony import */ var _media_chris_DATA_source_repos_crosswise_src_app_api_puzzles_generate_route_ts__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./src/app/api/puzzles/generate/route.ts */ \"(rsc)/./src/app/api/puzzles/generate/route.ts\");\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// We inject the nextConfigOutput here so that we can use them in the route\n// module.\nconst nextConfigOutput = \"\"\nconst routeModule = new next_dist_server_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__.AppRouteRouteModule({\n    definition: {\n        kind: next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.APP_ROUTE,\n        page: \"/api/puzzles/generate/route\",\n        pathname: \"/api/puzzles/generate\",\n        filename: \"route\",\n        bundlePath: \"app/api/puzzles/generate/route\"\n    },\n    distDir: \".next\" || 0,\n    relativeProjectDir:  false || '',\n    resolvedPagePath: \"/media/chris/DATA/source/repos/crosswise/src/app/api/puzzles/generate/route.ts\",\n    nextConfigOutput,\n    userland: _media_chris_DATA_source_repos_crosswise_src_app_api_puzzles_generate_route_ts__WEBPACK_IMPORTED_MODULE_16__\n});\n// Pull out the exports that we need to expose from the module. This should\n// be eliminated when we've moved the other routes to the new format. These\n// are used to hook into the route.\nconst { workAsyncStorage, workUnitAsyncStorage, serverHooks } = routeModule;\nfunction patchFetch() {\n    return (0,next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__.patchFetch)({\n        workAsyncStorage,\n        workUnitAsyncStorage\n    });\n}\n\nasync function handler(req, res, ctx) {\n    var _nextConfig_experimental;\n    let srcPage = \"/api/puzzles/generate/route\";\n    // turbopack doesn't normalize `/index` in the page name\n    // so we need to to process dynamic routes properly\n    // TODO: fix turbopack providing differing value from webpack\n    if (false) {} else if (srcPage === '/index') {\n        // we always normalize /index specifically\n        srcPage = '/';\n    }\n    const multiZoneDraftMode = false;\n    const prepareResult = await routeModule.prepare(req, res, {\n        srcPage,\n        multiZoneDraftMode\n    });\n    if (!prepareResult) {\n        res.statusCode = 400;\n        res.end('Bad Request');\n        ctx.waitUntil == null ? void 0 : ctx.waitUntil.call(ctx, Promise.resolve());\n        return null;\n    }\n    const { buildId, params, nextConfig, isDraftMode, prerenderManifest, routerServerContext, isOnDemandRevalidate, revalidateOnlyGenerated, resolvedPathname } = prepareResult;\n    const normalizedSrcPage = (0,next_dist_shared_lib_router_utils_app_paths__WEBPACK_IMPORTED_MODULE_5__.normalizeAppPath)(srcPage);\n    let isIsr = Boolean(prerenderManifest.dynamicRoutes[normalizedSrcPage] || prerenderManifest.routes[resolvedPathname]);\n    if (isIsr && !isDraftMode) {\n        const isPrerendered = Boolean(prerenderManifest.routes[resolvedPathname]);\n        const prerenderInfo = prerenderManifest.dynamicRoutes[normalizedSrcPage];\n        if (prerenderInfo) {\n            if (prerenderInfo.fallback === false && !isPrerendered) {\n                throw new next_dist_shared_lib_no_fallback_error_external__WEBPACK_IMPORTED_MODULE_14__.NoFallbackError();\n            }\n        }\n    }\n    let cacheKey = null;\n    if (isIsr && !routeModule.isDev && !isDraftMode) {\n        cacheKey = resolvedPathname;\n        // ensure /index and / is normalized to one key\n        cacheKey = cacheKey === '/index' ? '/' : cacheKey;\n    }\n    const supportsDynamicResponse = // If we're in development, we always support dynamic HTML\n    routeModule.isDev === true || // If this is not SSG or does not have static paths, then it supports\n    // dynamic HTML.\n    !isIsr;\n    // This is a revalidation request if the request is for a static\n    // page and it is not being resumed from a postponed render and\n    // it is not a dynamic RSC request then it is a revalidation\n    // request.\n    const isRevalidate = isIsr && !supportsDynamicResponse;\n    const method = req.method || 'GET';\n    const tracer = (0,next_dist_server_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_4__.getTracer)();\n    const activeSpan = tracer.getActiveScopeSpan();\n    const context = {\n        params,\n        prerenderManifest,\n        renderOpts: {\n            experimental: {\n                cacheComponents: Boolean(nextConfig.experimental.cacheComponents),\n                authInterrupts: Boolean(nextConfig.experimental.authInterrupts)\n            },\n            supportsDynamicResponse,\n            incrementalCache: (0,next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_3__.getRequestMeta)(req, 'incrementalCache'),\n            cacheLifeProfiles: (_nextConfig_experimental = nextConfig.experimental) == null ? void 0 : _nextConfig_experimental.cacheLife,\n            isRevalidate,\n            waitUntil: ctx.waitUntil,\n            onClose: (cb)=>{\n                res.on('close', cb);\n            },\n            onAfterTaskError: undefined,\n            onInstrumentationRequestError: (error, _request, errorContext)=>routeModule.onRequestError(req, error, errorContext, routerServerContext)\n        },\n        sharedContext: {\n            buildId\n        }\n    };\n    const nodeNextReq = new next_dist_server_base_http_node__WEBPACK_IMPORTED_MODULE_6__.NodeNextRequest(req);\n    const nodeNextRes = new next_dist_server_base_http_node__WEBPACK_IMPORTED_MODULE_6__.NodeNextResponse(res);\n    const nextReq = next_dist_server_web_spec_extension_adapters_next_request__WEBPACK_IMPORTED_MODULE_7__.NextRequestAdapter.fromNodeNextRequest(nodeNextReq, (0,next_dist_server_web_spec_extension_adapters_next_request__WEBPACK_IMPORTED_MODULE_7__.signalFromNodeResponse)(res));\n    try {\n        const invokeRouteModule = async (span)=>{\n            return routeModule.handle(nextReq, context).finally(()=>{\n                if (!span) return;\n                span.setAttributes({\n                    'http.status_code': res.statusCode,\n                    'next.rsc': false\n                });\n                const rootSpanAttributes = tracer.getRootSpanAttributes();\n                // We were unable to get attributes, probably OTEL is not enabled\n                if (!rootSpanAttributes) {\n                    return;\n                }\n                if (rootSpanAttributes.get('next.span_type') !== next_dist_server_lib_trace_constants__WEBPACK_IMPORTED_MODULE_8__.BaseServerSpan.handleRequest) {\n                    console.warn(`Unexpected root span type '${rootSpanAttributes.get('next.span_type')}'. Please report this Next.js issue https://github.com/vercel/next.js`);\n                    return;\n                }\n                const route = rootSpanAttributes.get('next.route');\n                if (route) {\n                    const name = `${method} ${route}`;\n                    span.setAttributes({\n                        'next.route': route,\n                        'http.route': route,\n                        'next.span_name': name\n                    });\n                    span.updateName(name);\n                } else {\n                    span.updateName(`${method} ${req.url}`);\n                }\n            });\n        };\n        const handleResponse = async (currentSpan)=>{\n            var _cacheEntry_value;\n            const responseGenerator = async ({ previousCacheEntry })=>{\n                try {\n                    if (!(0,next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_3__.getRequestMeta)(req, 'minimalMode') && isOnDemandRevalidate && revalidateOnlyGenerated && !previousCacheEntry) {\n                        res.statusCode = 404;\n                        // on-demand revalidate always sets this header\n                        res.setHeader('x-nextjs-cache', 'REVALIDATED');\n                        res.end('This page could not be found');\n                        return null;\n                    }\n                    const response = await invokeRouteModule(currentSpan);\n                    req.fetchMetrics = context.renderOpts.fetchMetrics;\n                    let pendingWaitUntil = context.renderOpts.pendingWaitUntil;\n                    // Attempt using provided waitUntil if available\n                    // if it's not we fallback to sendResponse's handling\n                    if (pendingWaitUntil) {\n                        if (ctx.waitUntil) {\n                            ctx.waitUntil(pendingWaitUntil);\n                            pendingWaitUntil = undefined;\n                        }\n                    }\n                    const cacheTags = context.renderOpts.collectedTags;\n                    // If the request is for a static response, we can cache it so long\n                    // as it's not edge.\n                    if (isIsr) {\n                        const blob = await response.blob();\n                        // Copy the headers from the response.\n                        const headers = (0,next_dist_server_web_utils__WEBPACK_IMPORTED_MODULE_11__.toNodeOutgoingHttpHeaders)(response.headers);\n                        if (cacheTags) {\n                            headers[next_dist_lib_constants__WEBPACK_IMPORTED_MODULE_13__.NEXT_CACHE_TAGS_HEADER] = cacheTags;\n                        }\n                        if (!headers['content-type'] && blob.type) {\n                            headers['content-type'] = blob.type;\n                        }\n                        const revalidate = typeof context.renderOpts.collectedRevalidate === 'undefined' || context.renderOpts.collectedRevalidate >= next_dist_lib_constants__WEBPACK_IMPORTED_MODULE_13__.INFINITE_CACHE ? false : context.renderOpts.collectedRevalidate;\n                        const expire = typeof context.renderOpts.collectedExpire === 'undefined' || context.renderOpts.collectedExpire >= next_dist_lib_constants__WEBPACK_IMPORTED_MODULE_13__.INFINITE_CACHE ? undefined : context.renderOpts.collectedExpire;\n                        // Create the cache entry for the response.\n                        const cacheEntry = {\n                            value: {\n                                kind: next_dist_server_response_cache__WEBPACK_IMPORTED_MODULE_15__.CachedRouteKind.APP_ROUTE,\n                                status: response.status,\n                                body: Buffer.from(await blob.arrayBuffer()),\n                                headers\n                            },\n                            cacheControl: {\n                                revalidate,\n                                expire\n                            }\n                        };\n                        return cacheEntry;\n                    } else {\n                        // send response without caching if not ISR\n                        await (0,next_dist_server_send_response__WEBPACK_IMPORTED_MODULE_10__.sendResponse)(nodeNextReq, nodeNextRes, response, context.renderOpts.pendingWaitUntil);\n                        return null;\n                    }\n                } catch (err) {\n                    // if this is a background revalidate we need to report\n                    // the request error here as it won't be bubbled\n                    if (previousCacheEntry == null ? void 0 : previousCacheEntry.isStale) {\n                        await routeModule.onRequestError(req, err, {\n                            routerKind: 'App Router',\n                            routePath: srcPage,\n                            routeType: 'route',\n                            revalidateReason: (0,next_dist_server_instrumentation_utils__WEBPACK_IMPORTED_MODULE_9__.getRevalidateReason)({\n                                isRevalidate,\n                                isOnDemandRevalidate\n                            })\n                        }, routerServerContext);\n                    }\n                    throw err;\n                }\n            };\n            const cacheEntry = await routeModule.handleResponse({\n                req,\n                nextConfig,\n                cacheKey,\n                routeKind: next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.APP_ROUTE,\n                isFallback: false,\n                prerenderManifest,\n                isRoutePPREnabled: false,\n                isOnDemandRevalidate,\n                revalidateOnlyGenerated,\n                responseGenerator,\n                waitUntil: ctx.waitUntil\n            });\n            // we don't create a cacheEntry for ISR\n            if (!isIsr) {\n                return null;\n            }\n            if ((cacheEntry == null ? void 0 : (_cacheEntry_value = cacheEntry.value) == null ? void 0 : _cacheEntry_value.kind) !== next_dist_server_response_cache__WEBPACK_IMPORTED_MODULE_15__.CachedRouteKind.APP_ROUTE) {\n                var _cacheEntry_value1;\n                throw Object.defineProperty(new Error(`Invariant: app-route received invalid cache entry ${cacheEntry == null ? void 0 : (_cacheEntry_value1 = cacheEntry.value) == null ? void 0 : _cacheEntry_value1.kind}`), \"__NEXT_ERROR_CODE\", {\n                    value: \"E701\",\n                    enumerable: false,\n                    configurable: true\n                });\n            }\n            if (!(0,next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_3__.getRequestMeta)(req, 'minimalMode')) {\n                res.setHeader('x-nextjs-cache', isOnDemandRevalidate ? 'REVALIDATED' : cacheEntry.isMiss ? 'MISS' : cacheEntry.isStale ? 'STALE' : 'HIT');\n            }\n            // Draft mode should never be cached\n            if (isDraftMode) {\n                res.setHeader('Cache-Control', 'private, no-cache, no-store, max-age=0, must-revalidate');\n            }\n            const headers = (0,next_dist_server_web_utils__WEBPACK_IMPORTED_MODULE_11__.fromNodeOutgoingHttpHeaders)(cacheEntry.value.headers);\n            if (!((0,next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_3__.getRequestMeta)(req, 'minimalMode') && isIsr)) {\n                headers.delete(next_dist_lib_constants__WEBPACK_IMPORTED_MODULE_13__.NEXT_CACHE_TAGS_HEADER);\n            }\n            // If cache control is already set on the response we don't\n            // override it to allow users to customize it via next.config\n            if (cacheEntry.cacheControl && !res.getHeader('Cache-Control') && !headers.get('Cache-Control')) {\n                headers.set('Cache-Control', (0,next_dist_server_lib_cache_control__WEBPACK_IMPORTED_MODULE_12__.getCacheControlHeader)(cacheEntry.cacheControl));\n            }\n            await (0,next_dist_server_send_response__WEBPACK_IMPORTED_MODULE_10__.sendResponse)(nodeNextReq, nodeNextRes, new Response(cacheEntry.value.body, {\n                headers,\n                status: cacheEntry.value.status || 200\n            }));\n            return null;\n        };\n        // TODO: activeSpan code path is for when wrapped by\n        // next-server can be removed when this is no longer used\n        if (activeSpan) {\n            await handleResponse(activeSpan);\n        } else {\n            await tracer.withPropagatedContext(req.headers, ()=>tracer.trace(next_dist_server_lib_trace_constants__WEBPACK_IMPORTED_MODULE_8__.BaseServerSpan.handleRequest, {\n                    spanName: `${method} ${req.url}`,\n                    kind: next_dist_server_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_4__.SpanKind.SERVER,\n                    attributes: {\n                        'http.method': method,\n                        'http.target': req.url\n                    }\n                }, handleResponse));\n        }\n    } catch (err) {\n        // if we aren't wrapped by base-server handle here\n        if (!activeSpan && !(err instanceof next_dist_shared_lib_no_fallback_error_external__WEBPACK_IMPORTED_MODULE_14__.NoFallbackError)) {\n            await routeModule.onRequestError(req, err, {\n                routerKind: 'App Router',\n                routePath: normalizedSrcPage,\n                routeType: 'route',\n                revalidateReason: (0,next_dist_server_instrumentation_utils__WEBPACK_IMPORTED_MODULE_9__.getRevalidateReason)({\n                    isRevalidate,\n                    isOnDemandRevalidate\n                })\n            });\n        }\n        // rethrow so that we can handle serving error page\n        // If this is during static generation, throw the error again.\n        if (isIsr) throw err;\n        // Otherwise, send a 500 response.\n        await (0,next_dist_server_send_response__WEBPACK_IMPORTED_MODULE_10__.sendResponse)(nodeNextReq, nodeNextRes, new Response(null, {\n            status: 500\n        }));\n        return null;\n    }\n}\n\n//# sourceMappingURL=app-route.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fapi%2Fpuzzles%2Fgenerate%2Froute&page=%2Fapi%2Fpuzzles%2Fgenerate%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fpuzzles%2Fgenerate%2Froute.ts&appDir=%2Fmedia%2Fchris%2FDATA%2Fsource%2Frepos%2Fcrosswise%2Fsrc%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2Fmedia%2Fchris%2FDATA%2Fsource%2Frepos%2Fcrosswise&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D&isGlobalNotFoundEnabled=!\n");

/***/ }),

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?server=true!":
/*!******************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?server=true! ***!
  \******************************************************************************************************/
/***/ (() => {



/***/ }),

/***/ "(rsc)/./src/app/api/puzzles/generate/route.ts":
/*!***********************************************!*\
  !*** ./src/app/api/puzzles/generate/route.ts ***!
  \***********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   POST: () => (/* binding */ POST)\n/* harmony export */ });\n/* harmony import */ var next_server__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/server */ \"(rsc)/./node_modules/next/dist/api/server.js\");\n/* harmony import */ var _lib_db__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @/lib/db */ \"(rsc)/./src/lib/db.ts\");\n/* harmony import */ var _lib_validation__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @/lib/validation */ \"(rsc)/./src/lib/validation.ts\");\n/* harmony import */ var _lib_crossword_generator__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @/lib/crossword-generator */ \"(rsc)/./src/lib/crossword-generator.ts\");\n\n\n\n\nasync function POST(request) {\n    try {\n        const body = await request.json();\n        const validated = _lib_validation__WEBPACK_IMPORTED_MODULE_2__.GeneratePuzzleSchema.parse(body);\n        // Fetch list with items\n        const list = await _lib_db__WEBPACK_IMPORTED_MODULE_1__.prisma.list.findUnique({\n            where: {\n                id: validated.listId\n            },\n            include: {\n                items: true\n            }\n        });\n        if (!list) {\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                success: false,\n                error: {\n                    message: 'List not found'\n                }\n            }, {\n                status: 404\n            });\n        }\n        if (list.items.length === 0) {\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                success: false,\n                error: {\n                    message: 'List has no items'\n                }\n            }, {\n                status: 400\n            });\n        }\n        // Determine number of items to use (random selection up to 25)\n        const maxItems = Math.min(25, list.items.length);\n        const itemsToUse = list.items.sort(()=>Math.random() - 0.5) // Shuffle\n        .slice(0, maxItems).map((item)=>({\n                answer: item.answer,\n                clue: item.clue\n            }));\n        // Generate puzzle\n        const generator = new _lib_crossword_generator__WEBPACK_IMPORTED_MODULE_3__.CrosswordGenerator({\n            gridSize: validated.gridSize,\n            seed: validated.seed || `${Date.now()}_${list.id}`,\n            maxAttempts: 300\n        });\n        const result = generator.generate(itemsToUse);\n        if (!result.success) {\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                success: false,\n                error: {\n                    message: 'Failed to generate puzzle',\n                    details: {\n                        placedWords: result.placedWords,\n                        totalWords: result.totalWords,\n                        conflictingWords: result.conflictingWords\n                    }\n                }\n            }, {\n                status: 422\n            });\n        }\n        // Save puzzle to database\n        const puzzle = await _lib_db__WEBPACK_IMPORTED_MODULE_1__.prisma.puzzle.create({\n            data: {\n                listId: validated.listId,\n                seed: validated.seed || `${Date.now()}_${list.id}`,\n                grid: JSON.stringify(result.grid),\n                numbering: JSON.stringify(result.numbering),\n                settings: JSON.stringify({\n                    gridSize: validated.gridSize || {\n                        rows: 15,\n                        cols: 15\n                    },\n                    checkMode: 'word',\n                    symmetry: false,\n                    allowHyphens: false\n                })\n            }\n        });\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            success: true,\n            data: {\n                puzzleId: puzzle.id,\n                grid: result.grid,\n                numbering: result.numbering,\n                seed: puzzle.seed,\n                placedWords: result.placedWords,\n                totalWords: result.totalWords\n            }\n        });\n    } catch (error) {\n        console.error('Failed to generate puzzle:', error);\n        if (error instanceof Error && error.name === 'ZodError') {\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                success: false,\n                error: {\n                    message: 'Invalid request data'\n                }\n            }, {\n                status: 400\n            });\n        }\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            success: false,\n            error: {\n                message: 'Failed to generate puzzle'\n            }\n        }, {\n            status: 500\n        });\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./src/app/api/puzzles/generate/route.ts\n");

/***/ }),

/***/ "(rsc)/./src/lib/crossword-generator.ts":
/*!****************************************!*\
  !*** ./src/lib/crossword-generator.ts ***!
  \****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CrosswordGenerator: () => (/* binding */ CrosswordGenerator)\n/* harmony export */ });\n/* harmony import */ var seedrandom__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! seedrandom */ \"(rsc)/./node_modules/seedrandom/index.js\");\n/* harmony import */ var seedrandom__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(seedrandom__WEBPACK_IMPORTED_MODULE_0__);\n\nclass CrosswordGenerator {\n    constructor(options = {}){\n        this.placedWords = [];\n        const seed = options.seed || Math.random().toString();\n        this.rng = seedrandom__WEBPACK_IMPORTED_MODULE_0___default()(seed);\n        this.gridSize = options.gridSize || {\n            rows: 15,\n            cols: 15\n        };\n        this.maxAttempts = options.maxAttempts || 300;\n        this.grid = this.createEmptyGrid();\n    }\n    generate(words) {\n        // Step 1: Preprocess words\n        const processedWords = this.preprocessWords(words);\n        if (processedWords.length === 0) {\n            return {\n                success: false,\n                placedWords: 0,\n                totalWords: words.length\n            };\n        }\n        // Step 2: Try generation with multiple attempts\n        let bestResult = [];\n        let attempts = 0;\n        while(attempts < this.maxAttempts){\n            this.grid = this.createEmptyGrid();\n            this.placedWords = [];\n            const shuffledWords = this.shuffleArray([\n                ...processedWords\n            ]);\n            const result = this.generateWithBacktracking(shuffledWords);\n            if (result.length > bestResult.length) {\n                bestResult = [\n                    ...result\n                ];\n            }\n            // Success criteria: placed at least 90% of words\n            if (result.length >= Math.floor(words.length * 0.9)) {\n                break;\n            }\n            attempts++;\n        }\n        this.placedWords = bestResult;\n        const successRate = bestResult.length / words.length;\n        if (successRate < 0.9) {\n            const conflictingWords = this.findConflictingWords(processedWords, bestResult);\n            return {\n                success: false,\n                placedWords: bestResult.length,\n                totalWords: words.length,\n                conflictingWords\n            };\n        }\n        // Step 3: Create final grid and numbering\n        this.rebuildGrid(bestResult);\n        const finalGrid = this.createFinalGrid();\n        const numbering = this.generateNumbering(bestResult);\n        return {\n            success: true,\n            grid: finalGrid,\n            numbering,\n            placedWords: bestResult.length,\n            totalWords: words.length\n        };\n    }\n    preprocessWords(words) {\n        return words.map((word)=>({\n                answer: word.answer.toUpperCase().replace(/[^A-Z]/g, ''),\n                clue: word.clue,\n                length: word.answer.length,\n                letterFreq: this.calculateLetterFrequency(word.answer)\n            })).filter((word)=>word.answer.length >= 2 && word.answer.length <= 20).sort((a, b)=>b.length - a.length) // Longest words first\n        ;\n    }\n    calculateLetterFrequency(word) {\n        const freq = new Map();\n        for(let i = 0; i < word.length; i++){\n            const letter = word[i];\n            if (!freq.has(letter)) {\n                freq.set(letter, []);\n            }\n            freq.get(letter).push(i);\n        }\n        return freq;\n    }\n    generateWithBacktracking(words) {\n        if (words.length === 0) return this.placedWords;\n        const word = words[0];\n        const remainingWords = words.slice(1);\n        // If this is the first word, place it in the center\n        if (this.placedWords.length === 0) {\n            const centerRow = Math.floor(this.gridSize.rows / 2);\n            const centerCol = Math.floor((this.gridSize.cols - word.length) / 2);\n            if (this.tryPlaceWord(word, centerRow, centerCol, 'across')) {\n                const result = this.generateWithBacktracking(remainingWords);\n                if (result.length > 0) return result;\n                // Backtrack\n                this.removeWord(this.placedWords[this.placedWords.length - 1]);\n            }\n            return [];\n        }\n        // Find all possible placements for this word\n        const candidates = this.findPlacementCandidates(word);\n        // Sort by score (best first)\n        candidates.sort((a, b)=>b.score - a.score);\n        // Try each candidate\n        for (const candidate of candidates){\n            if (this.tryPlaceWord(word, candidate.row, candidate.col, candidate.direction)) {\n                const result = this.generateWithBacktracking(remainingWords);\n                if (result.length >= remainingWords.length) {\n                    return result;\n                }\n                // Backtrack\n                this.removeWord(this.placedWords[this.placedWords.length - 1]);\n            }\n        }\n        // If we can't place this word, try without it\n        return this.generateWithBacktracking(remainingWords);\n    }\n    findPlacementCandidates(word) {\n        const candidates = [];\n        for (const placement of this.placedWords){\n            // Try intersections with this placed word\n            for(let i = 0; i < placement.word.length; i++){\n                const placedLetter = placement.word[i];\n                const positions = word.letterFreq.get(placedLetter);\n                if (!positions) continue;\n                for (const pos of positions){\n                    // Calculate intersection point\n                    const intersectRow = placement.direction === 'across' ? placement.row : placement.row + i;\n                    const intersectCol = placement.direction === 'across' ? placement.col + i : placement.col;\n                    // Try perpendicular direction\n                    const newDirection = placement.direction === 'across' ? 'down' : 'across';\n                    const newRow = newDirection === 'across' ? intersectRow : intersectRow - pos;\n                    const newCol = newDirection === 'across' ? intersectCol - pos : intersectCol;\n                    if (this.isValidPlacement(word, newRow, newCol, newDirection)) {\n                        const score = this.scorePlacement(word, newRow, newCol, newDirection);\n                        candidates.push({\n                            word,\n                            row: newRow,\n                            col: newCol,\n                            direction: newDirection,\n                            score,\n                            intersections: [\n                                {\n                                    row: intersectRow,\n                                    col: intersectCol,\n                                    letter: placedLetter\n                                }\n                            ]\n                        });\n                    }\n                }\n            }\n        }\n        return candidates;\n    }\n    isValidPlacement(word, row, col, direction) {\n        const endRow = direction === 'down' ? row + word.length - 1 : row;\n        const endCol = direction === 'across' ? col + word.length - 1 : col;\n        // Check bounds\n        if (row < 0 || col < 0 || endRow >= this.gridSize.rows || endCol >= this.gridSize.cols) {\n            return false;\n        }\n        // Check for conflicts and adjacency rules\n        for(let i = 0; i < word.length; i++){\n            const currentRow = direction === 'down' ? row + i : row;\n            const currentCol = direction === 'across' ? col + i : col;\n            const letter = word.answer[i];\n            const cellValue = this.grid[currentRow][currentCol];\n            if (cellValue !== null && cellValue !== letter) {\n                return false // Conflict\n                ;\n            }\n            // Check adjacency (no touching words except at intersections)\n            if (cellValue === null) {\n                const adjacentCells = this.getAdjacentCells(currentRow, currentCol, direction);\n                for (const [adjRow, adjCol] of adjacentCells){\n                    if (this.grid[adjRow][adjCol] !== null) {\n                        return false;\n                    }\n                }\n            }\n        }\n        // Check word boundaries (ensure words don't run together)\n        const beforeRow = direction === 'down' ? row - 1 : row;\n        const beforeCol = direction === 'across' ? col - 1 : col;\n        const afterRow = direction === 'down' ? endRow + 1 : row;\n        const afterCol = direction === 'across' ? endCol + 1 : col;\n        if (this.isInBounds(beforeRow, beforeCol) && this.grid[beforeRow][beforeCol] !== null) {\n            return false;\n        }\n        if (this.isInBounds(afterRow, afterCol) && this.grid[afterRow][afterCol] !== null) {\n            return false;\n        }\n        return true;\n    }\n    scorePlacement(word, row, col, direction) {\n        let score = 0;\n        let intersections = 0;\n        for(let i = 0; i < word.length; i++){\n            const currentRow = direction === 'down' ? row + i : row;\n            const currentCol = direction === 'across' ? col + i : col;\n            if (this.grid[currentRow][currentCol] !== null) {\n                intersections++;\n                score += 10; // Reward intersections\n            }\n        }\n        // Prefer central placements\n        const centerRow = this.gridSize.rows / 2;\n        const centerCol = this.gridSize.cols / 2;\n        const distanceFromCenter = Math.abs(row - centerRow) + Math.abs(col - centerCol);\n        score -= distanceFromCenter * 0.5;\n        // Reward more intersections exponentially\n        score += intersections * intersections * 5;\n        return score;\n    }\n    tryPlaceWord(word, row, col, direction) {\n        if (!this.isValidPlacement(word, row, col, direction)) {\n            return false;\n        }\n        // Place the word\n        for(let i = 0; i < word.length; i++){\n            const currentRow = direction === 'down' ? row + i : row;\n            const currentCol = direction === 'across' ? col + i : col;\n            this.grid[currentRow][currentCol] = word.answer[i];\n        }\n        this.placedWords.push({\n            word: word.answer,\n            clue: word.clue,\n            row,\n            col,\n            direction,\n            number: 0 // Will be set during numbering\n        });\n        return true;\n    }\n    removeWord(placement) {\n        // Remove word from grid\n        for(let i = 0; i < placement.word.length; i++){\n            const currentRow = placement.direction === 'down' ? placement.row + i : placement.row;\n            const currentCol = placement.direction === 'across' ? placement.col + i : placement.col;\n            // Only remove if no other word uses this cell\n            let usedByOther = false;\n            for (const other of this.placedWords){\n                if (other === placement) continue;\n                for(let j = 0; j < other.word.length; j++){\n                    const otherRow = other.direction === 'down' ? other.row + j : other.row;\n                    const otherCol = other.direction === 'across' ? other.col + j : other.col;\n                    if (otherRow === currentRow && otherCol === currentCol) {\n                        usedByOther = true;\n                        break;\n                    }\n                }\n                if (usedByOther) break;\n            }\n            if (!usedByOther) {\n                this.grid[currentRow][currentCol] = null;\n            }\n        }\n        // Remove from placed words\n        const index = this.placedWords.indexOf(placement);\n        if (index > -1) {\n            this.placedWords.splice(index, 1);\n        }\n    }\n    rebuildGrid(placements) {\n        this.grid = this.createEmptyGrid();\n        for (const placement of placements){\n            for(let i = 0; i < placement.word.length; i++){\n                const row = placement.direction === 'down' ? placement.row + i : placement.row;\n                const col = placement.direction === 'across' ? placement.col + i : placement.col;\n                this.grid[row][col] = placement.word[i];\n            }\n        }\n    }\n    createFinalGrid() {\n        const cells = [];\n        for(let row = 0; row < this.gridSize.rows; row++){\n            cells[row] = [];\n            for(let col = 0; col < this.gridSize.cols; col++){\n                const letter = this.grid[row][col];\n                cells[row][col] = {\n                    row,\n                    col,\n                    type: letter ? 'cell' : 'block',\n                    letter: letter || undefined\n                };\n            }\n        }\n        return {\n            cells,\n            size: {\n                rows: this.gridSize.rows,\n                cols: this.gridSize.cols\n            }\n        };\n    }\n    generateNumbering(placements) {\n        const numbered = new Set();\n        const across = [];\n        const down = [];\n        let currentNumber = 1;\n        // Sort placements by position (top-left to bottom-right)\n        const sortedPlacements = [\n            ...placements\n        ].sort((a, b)=>{\n            if (a.row !== b.row) return a.row - b.row;\n            return a.col - b.col;\n        });\n        for(let row = 0; row < this.gridSize.rows; row++){\n            for(let col = 0; col < this.gridSize.cols; col++){\n                if (this.grid[row][col] === null) continue;\n                const acrossWord = sortedPlacements.find((p)=>p.direction === 'across' && p.row === row && p.col === col);\n                const downWord = sortedPlacements.find((p)=>p.direction === 'down' && p.row === row && p.col === col);\n                if (acrossWord || downWord) {\n                    if (acrossWord) {\n                        acrossWord.number = currentNumber;\n                        across.push({\n                            number: currentNumber,\n                            answer: acrossWord.word,\n                            clue: acrossWord.clue,\n                            row: acrossWord.row,\n                            col: acrossWord.col,\n                            length: acrossWord.word.length,\n                            direction: 'across'\n                        });\n                    }\n                    if (downWord) {\n                        downWord.number = currentNumber;\n                        down.push({\n                            number: currentNumber,\n                            answer: downWord.word,\n                            clue: downWord.clue,\n                            row: downWord.row,\n                            col: downWord.col,\n                            length: downWord.word.length,\n                            direction: 'down'\n                        });\n                    }\n                    currentNumber++;\n                }\n            }\n        }\n        return {\n            across,\n            down\n        };\n    }\n    createEmptyGrid() {\n        return Array(this.gridSize.rows).fill(null).map(()=>Array(this.gridSize.cols).fill(null));\n    }\n    getAdjacentCells(row, col, direction) {\n        const adjacent = [];\n        if (direction === 'across') {\n            // Check above and below\n            if (row > 0) adjacent.push([\n                row - 1,\n                col\n            ]);\n            if (row < this.gridSize.rows - 1) adjacent.push([\n                row + 1,\n                col\n            ]);\n        } else {\n            // Check left and right\n            if (col > 0) adjacent.push([\n                row,\n                col - 1\n            ]);\n            if (col < this.gridSize.cols - 1) adjacent.push([\n                row,\n                col + 1\n            ]);\n        }\n        return adjacent.filter(([r, c])=>this.isInBounds(r, c));\n    }\n    isInBounds(row, col) {\n        return row >= 0 && row < this.gridSize.rows && col >= 0 && col < this.gridSize.cols;\n    }\n    shuffleArray(array) {\n        const shuffled = [\n            ...array\n        ];\n        for(let i = shuffled.length - 1; i > 0; i--){\n            const j = Math.floor(this.rng() * (i + 1));\n            [shuffled[i], shuffled[j]] = [\n                shuffled[j],\n                shuffled[i]\n            ];\n        }\n        return shuffled;\n    }\n    findConflictingWords(allWords, placedWords) {\n        const placed = new Set(placedWords.map((p)=>p.word));\n        return allWords.filter((w)=>!placed.has(w.answer)).map((w)=>w.answer).slice(0, 5) // Return up to 5 conflicting words\n        ;\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./src/lib/crossword-generator.ts\n");

/***/ }),

/***/ "(rsc)/./src/lib/db.ts":
/*!***********************!*\
  !*** ./src/lib/db.ts ***!
  \***********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   prisma: () => (/* binding */ prisma)\n/* harmony export */ });\n/* harmony import */ var _prisma_client__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @prisma/client */ \"@prisma/client\");\n/* harmony import */ var _prisma_client__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_prisma_client__WEBPACK_IMPORTED_MODULE_0__);\n\nconst globalForPrisma = globalThis;\nconst prisma = globalForPrisma.prisma ?? new _prisma_client__WEBPACK_IMPORTED_MODULE_0__.PrismaClient();\nif (true) globalForPrisma.prisma = prisma;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9zcmMvbGliL2RiLnRzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUE2QztBQUU3QyxNQUFNQyxrQkFBa0JDO0FBSWpCLE1BQU1DLFNBQVNGLGdCQUFnQkUsTUFBTSxJQUFJLElBQUlILHdEQUFZQSxHQUFFO0FBRWxFLElBQUlJLElBQXFDLEVBQUVILGdCQUFnQkUsTUFBTSxHQUFHQSIsInNvdXJjZXMiOlsiL21lZGlhL2NocmlzL0RBVEEvc291cmNlL3JlcG9zL2Nyb3Nzd2lzZS9zcmMvbGliL2RiLnRzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFByaXNtYUNsaWVudCB9IGZyb20gJ0BwcmlzbWEvY2xpZW50J1xuXG5jb25zdCBnbG9iYWxGb3JQcmlzbWEgPSBnbG9iYWxUaGlzIGFzIHVua25vd24gYXMge1xuICBwcmlzbWE6IFByaXNtYUNsaWVudCB8IHVuZGVmaW5lZFxufVxuXG5leHBvcnQgY29uc3QgcHJpc21hID0gZ2xvYmFsRm9yUHJpc21hLnByaXNtYSA/PyBuZXcgUHJpc21hQ2xpZW50KClcblxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicpIGdsb2JhbEZvclByaXNtYS5wcmlzbWEgPSBwcmlzbWEiXSwibmFtZXMiOlsiUHJpc21hQ2xpZW50IiwiZ2xvYmFsRm9yUHJpc21hIiwiZ2xvYmFsVGhpcyIsInByaXNtYSIsInByb2Nlc3MiXSwiaWdub3JlTGlzdCI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./src/lib/db.ts\n");

/***/ }),

/***/ "(rsc)/./src/lib/validation.ts":
/*!*******************************!*\
  !*** ./src/lib/validation.ts ***!
  \*******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CreateListSchema: () => (/* binding */ CreateListSchema),\n/* harmony export */   CreateTopicSchema: () => (/* binding */ CreateTopicSchema),\n/* harmony export */   GeneratePuzzleSchema: () => (/* binding */ GeneratePuzzleSchema),\n/* harmony export */   ImportListSchema: () => (/* binding */ ImportListSchema),\n/* harmony export */   ListItemSchema: () => (/* binding */ ListItemSchema),\n/* harmony export */   UpdateSolveStateSchema: () => (/* binding */ UpdateSolveStateSchema),\n/* harmony export */   normalizeAnswer: () => (/* binding */ normalizeAnswer),\n/* harmony export */   validateAnswerFormat: () => (/* binding */ validateAnswerFormat),\n/* harmony export */   validateListJSON: () => (/* binding */ validateListJSON)\n/* harmony export */ });\n/* harmony import */ var zod__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! zod */ \"(rsc)/./node_modules/zod/v4/classic/external.js\");\n\n// List JSON Schema validation (from PRP section 9.1)\nconst ListItemSchema = zod__WEBPACK_IMPORTED_MODULE_0__.object({\n    answer: zod__WEBPACK_IMPORTED_MODULE_0__.string().min(2, 'Answer must be at least 2 characters').max(20, 'Answer must be at most 20 characters').transform((val)=>val.toUpperCase().replace(/[^A-Z]/g, '')),\n    clue: zod__WEBPACK_IMPORTED_MODULE_0__.string().min(3, 'Clue must be at least 3 characters').max(200, 'Clue must be at most 200 characters'),\n    note: zod__WEBPACK_IMPORTED_MODULE_0__.string().optional(),\n    difficulty: zod__WEBPACK_IMPORTED_MODULE_0__.union([\n        zod__WEBPACK_IMPORTED_MODULE_0__.literal(1),\n        zod__WEBPACK_IMPORTED_MODULE_0__.literal(2),\n        zod__WEBPACK_IMPORTED_MODULE_0__.literal(3),\n        zod__WEBPACK_IMPORTED_MODULE_0__.literal(4),\n        zod__WEBPACK_IMPORTED_MODULE_0__.literal(5),\n        zod__WEBPACK_IMPORTED_MODULE_0__.literal(\"EASY\"),\n        zod__WEBPACK_IMPORTED_MODULE_0__.literal(\"MEDIUM\"),\n        zod__WEBPACK_IMPORTED_MODULE_0__.literal(\"HARD\") // String format\n    ]).optional()\n});\nconst ImportListSchema = zod__WEBPACK_IMPORTED_MODULE_0__.object({\n    topic: zod__WEBPACK_IMPORTED_MODULE_0__.string().min(1, 'Topic name is required'),\n    name: zod__WEBPACK_IMPORTED_MODULE_0__.string().min(1, 'List name is required'),\n    version: zod__WEBPACK_IMPORTED_MODULE_0__.number().int().positive().default(1),\n    items: zod__WEBPACK_IMPORTED_MODULE_0__.array(ListItemSchema).min(5, 'List must have at least 5 items for best results').max(50, 'List should not exceed 50 items for optimal generation')\n});\n// API validation schemas\nconst CreateTopicSchema = zod__WEBPACK_IMPORTED_MODULE_0__.object({\n    name: zod__WEBPACK_IMPORTED_MODULE_0__.string().min(1, 'Topic name is required').max(100, 'Topic name too long'),\n    description: zod__WEBPACK_IMPORTED_MODULE_0__.string().max(500, 'Description too long').optional(),\n    color: zod__WEBPACK_IMPORTED_MODULE_0__.string().regex(/^#[0-9A-F]{6}$/i, 'Invalid color format').default('#3B82F6'),\n    icon: zod__WEBPACK_IMPORTED_MODULE_0__.string().max(10, 'Icon too long').default('📚')\n});\nconst CreateListSchema = zod__WEBPACK_IMPORTED_MODULE_0__.object({\n    topicId: zod__WEBPACK_IMPORTED_MODULE_0__.string().cuid('Invalid topic ID'),\n    name: zod__WEBPACK_IMPORTED_MODULE_0__.string().min(1, 'List name is required').max(100, 'List name too long'),\n    items: zod__WEBPACK_IMPORTED_MODULE_0__.array(zod__WEBPACK_IMPORTED_MODULE_0__.object({\n        answer: zod__WEBPACK_IMPORTED_MODULE_0__.string().min(2, 'Answer must be at least 2 characters').max(20, 'Answer must be at most 20 characters'),\n        clue: zod__WEBPACK_IMPORTED_MODULE_0__.string().min(3, 'Clue must be at least 3 characters').max(200, 'Clue must be at most 200 characters'),\n        note: zod__WEBPACK_IMPORTED_MODULE_0__.string().optional(),\n        difficulty: zod__WEBPACK_IMPORTED_MODULE_0__.union([\n            zod__WEBPACK_IMPORTED_MODULE_0__.literal(1),\n            zod__WEBPACK_IMPORTED_MODULE_0__.literal(2),\n            zod__WEBPACK_IMPORTED_MODULE_0__.literal(3),\n            zod__WEBPACK_IMPORTED_MODULE_0__.literal(4),\n            zod__WEBPACK_IMPORTED_MODULE_0__.literal(5),\n            zod__WEBPACK_IMPORTED_MODULE_0__.literal(\"EASY\"),\n            zod__WEBPACK_IMPORTED_MODULE_0__.literal(\"MEDIUM\"),\n            zod__WEBPACK_IMPORTED_MODULE_0__.literal(\"HARD\") // String format\n        ]).optional()\n    })).min(1, 'At least one item is required')\n});\nconst GeneratePuzzleSchema = zod__WEBPACK_IMPORTED_MODULE_0__.object({\n    listId: zod__WEBPACK_IMPORTED_MODULE_0__.string().cuid('Invalid list ID'),\n    gridSize: zod__WEBPACK_IMPORTED_MODULE_0__.object({\n        rows: zod__WEBPACK_IMPORTED_MODULE_0__.number().int().min(9).max(19).optional(),\n        cols: zod__WEBPACK_IMPORTED_MODULE_0__.number().int().min(9).max(19).optional()\n    }).optional(),\n    seed: zod__WEBPACK_IMPORTED_MODULE_0__.string().optional()\n});\nconst UpdateSolveStateSchema = zod__WEBPACK_IMPORTED_MODULE_0__.object({\n    puzzleId: zod__WEBPACK_IMPORTED_MODULE_0__.string().cuid('Invalid puzzle ID'),\n    state: zod__WEBPACK_IMPORTED_MODULE_0__.string(),\n    completed: zod__WEBPACK_IMPORTED_MODULE_0__.boolean().optional()\n});\n// Validation helper functions\nfunction validateListJSON(data) {\n    try {\n        const result = ImportListSchema.parse(data);\n        // Additional validation for answer uniqueness\n        const answers = result.items.map((item)=>item.answer);\n        const uniqueAnswers = new Set(answers);\n        if (answers.length !== uniqueAnswers.size) {\n            throw new Error('Duplicate answers found in list');\n        }\n        // Check for minimum viable intersections\n        const letterCounts = new Map();\n        for (const answer of answers){\n            for (const letter of answer){\n                letterCounts.set(letter, (letterCounts.get(letter) || 0) + 1);\n            }\n        }\n        const commonLetters = Array.from(letterCounts.entries()).filter(([_, count])=>count >= 2).length;\n        if (commonLetters < 3) {\n            console.warn('Warning: Few common letters detected. Puzzle generation may be challenging.');\n        }\n        return {\n            success: true,\n            data: result\n        };\n    } catch (error) {\n        if (error instanceof zod__WEBPACK_IMPORTED_MODULE_0__.ZodError) {\n            return {\n                success: false,\n                errors: error.errors.map((err)=>({\n                        field: err.path.join('.'),\n                        message: err.message,\n                        code: err.code\n                    }))\n            };\n        }\n        return {\n            success: false,\n            errors: [\n                {\n                    field: 'general',\n                    message: error instanceof Error ? error.message : 'Unknown error'\n                }\n            ]\n        };\n    }\n}\nfunction normalizeAnswer(answer) {\n    return answer.toUpperCase().replace(/[^A-Z]/g, '');\n}\nfunction validateAnswerFormat(answer) {\n    const issues = [];\n    let normalized = answer.toUpperCase();\n    // Remove non-letter characters and track what was removed\n    const originalLength = normalized.length;\n    normalized = normalized.replace(/[^A-Z]/g, '');\n    if (normalized.length !== originalLength) {\n        issues.push('Non-letter characters removed');\n    }\n    if (normalized.length < 2) {\n        issues.push('Answer too short (minimum 2 letters)');\n        return {\n            valid: false,\n            normalized,\n            issues\n        };\n    }\n    if (normalized.length > 20) {\n        issues.push('Answer too long (maximum 20 letters)');\n        return {\n            valid: false,\n            normalized,\n            issues\n        };\n    }\n    return {\n        valid: issues.length === 0,\n        normalized,\n        issues\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./src/lib/validation.ts\n");

/***/ }),

/***/ "(ssr)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?server=true!":
/*!******************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?server=true! ***!
  \******************************************************************************************************/
/***/ (() => {



/***/ }),

/***/ "../app-render/action-async-storage.external":
/*!*******************************************************************************!*\
  !*** external "next/dist/server/app-render/action-async-storage.external.js" ***!
  \*******************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/server/app-render/action-async-storage.external.js");

/***/ }),

/***/ "../app-render/after-task-async-storage.external":
/*!***********************************************************************************!*\
  !*** external "next/dist/server/app-render/after-task-async-storage.external.js" ***!
  \***********************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/server/app-render/after-task-async-storage.external.js");

/***/ }),

/***/ "../app-render/work-async-storage.external":
/*!*****************************************************************************!*\
  !*** external "next/dist/server/app-render/work-async-storage.external.js" ***!
  \*****************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/server/app-render/work-async-storage.external.js");

/***/ }),

/***/ "./work-unit-async-storage.external":
/*!**********************************************************************************!*\
  !*** external "next/dist/server/app-render/work-unit-async-storage.external.js" ***!
  \**********************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/server/app-render/work-unit-async-storage.external.js");

/***/ }),

/***/ "@prisma/client":
/*!*********************************!*\
  !*** external "@prisma/client" ***!
  \*********************************/
/***/ ((module) => {

"use strict";
module.exports = require("@prisma/client");

/***/ }),

/***/ "crypto":
/*!*************************!*\
  !*** external "crypto" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = require("crypto");

/***/ }),

/***/ "next/dist/compiled/next-server/app-page.runtime.dev.js":
/*!*************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-page.runtime.dev.js" ***!
  \*************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/compiled/next-server/app-page.runtime.dev.js");

/***/ }),

/***/ "next/dist/compiled/next-server/app-route.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-route.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/compiled/next-server/app-route.runtime.dev.js");

/***/ }),

/***/ "next/dist/shared/lib/no-fallback-error.external":
/*!******************************************************************!*\
  !*** external "next/dist/shared/lib/no-fallback-error.external" ***!
  \******************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/shared/lib/no-fallback-error.external");

/***/ }),

/***/ "next/dist/shared/lib/router/utils/app-paths":
/*!**************************************************************!*\
  !*** external "next/dist/shared/lib/router/utils/app-paths" ***!
  \**************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/shared/lib/router/utils/app-paths");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../../../webpack-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next","vendor-chunks/zod","vendor-chunks/seedrandom"], () => (__webpack_exec__("(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fapi%2Fpuzzles%2Fgenerate%2Froute&page=%2Fapi%2Fpuzzles%2Fgenerate%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fpuzzles%2Fgenerate%2Froute.ts&appDir=%2Fmedia%2Fchris%2FDATA%2Fsource%2Frepos%2Fcrosswise%2Fsrc%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2Fmedia%2Fchris%2FDATA%2Fsource%2Frepos%2Fcrosswise&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D&isGlobalNotFoundEnabled=!")));
module.exports = __webpack_exports__;

})();